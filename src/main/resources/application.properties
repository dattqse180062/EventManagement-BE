# Application Configuration
spring.application.name=event-management
server.port=${SERVER_PORT:8080}

# Profile Configuration 
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:eventmanagement}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Properties
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:true}

# Security Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# JWT Configuration - Use strong randomly generated secrets in production
app.auth.jwt.secret=${JWT_SECRET:ZpnrQXGVyPJGhXMYy6BUyaWSt2vAGxqzU4bTYJcKXQH8SwCdPLbcKD9fNzJP3H4V}
app.auth.jwt.expiration=${JWT_EXPIRATION:86400000}
app.auth.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# CORS and Frontend Configuration
app.host=${APP_HOST:localhost}
app.port=${APP_PORT:3000}
app.frontend.url=http://${app.host}:${app.port}
spring.web.cors.allowed-origins=${app.frontend.url}

# Domain Authorization Configuration
app.auth.allowed-domains=${ALLOWED_DOMAINS:fpt.edu.vn,gmail.com}
app.auth.student-domain=${STUDENT_DOMAIN:fpt.edu.vn}
app.auth.lecturer-domain=${LECTURER_DOMAIN:gmail.com}

# Logging Configuration
logging.level.root=${ROOT_LOG_LEVEL:INFO}
logging.level.swd392.eventmanagement=${APP_LOG_LEVEL:DEBUG}
logging.level.org.springframework=${SPRING_LOG_LEVEL:WARN}
logging.level.org.hibernate=${HIBERNATE_LOG_LEVEL:WARN}